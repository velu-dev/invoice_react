// Global styles starts here

@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&display=swap');

$font-family: 'Open Sans', sans-serif;  
$font-base-size: 16px;
$auth-title-fsize: 32px;
$font-weight-normal: 400;
$font-weight-semibold: 600;
$text-uppercase: uppercase;
$desktop-modal-width: 1100px;

$section-title: 42px;
$section-subtitle: 14px;

// Colors
$btn-light-blue: #0086c5;
$btn-dark-blue: #06608b;
$btn-light-green: #76be3e;
$btn-dark-green: #218838;
$color-white: #ffffff;
$color-black: #000000;
$color-grey: #dbdbdb;
$auth-border-btm-color: #989898;
$color-red: #ff0000;
$failed-status: #e6e6e6;

$text-upper: uppercase;

/* Bootstrap 4 Class .card css */
@mixin card {
	background-color: transparent;
	border: 0;

	.card-header {
		background-color: #ffffff;
		padding: 25px;
		border-bottom: 1px solid #e5e5e5;

		h2 {
			margin-top: 5px;
			margin-bottom: 15px;
			font-size: 22px;
			color: $btn-light-blue;
			text-transform: capitalize;
		}

		p {
			color: #292929;
			font-size: 14px;
			margin-bottom: 0;
		}
	}

	.card-body {
		padding: 0;
	}
}

@mixin form-row {
	background-color: $color-white;
	padding: 1.25rem;
	margin-left: 0;
	margin-right: 0;
	margin-bottom: 50px;

	.form-label {
		font-size: 13px;
		color: #3d464d;
		display: block;
		
		span {
			color: $color-red;
		}
	}
}

@mixin btn-custom {
	margin-left: 10px;
	margin-right: 10px;
	font-size: 15px;
	min-width: 131px;
}

@mixin btn-link {
	color: $color-black;
	background-color: #dbdbdb;
	line-height: 30px;

	&:hover {
		text-decoration: none;
	}
}

@mixin btn-back {
	color: $color-white;
	background-color: $btn-light-green;
	line-height: 30px;

	&:hover {
		text-decoration: none;
		color: $color-white;
		background-color: $btn-dark-green;
		border-color: $btn-dark-green;
	}
}

/* ON/OFF toggle*/
@mixin toggle-wrap {
    .toggle {
        position: relative;
        width: 119px;
        height: 32px;
        border-radius: 50px;

        @include mX(768px, 1024px){
            width: 100px;
        }
        
        .btn {
            display: block;
            position: absolute;
            z-index: 4;
            top: 4px;
            left: 4px;
            width: 38px;
            height: 24px;
            background: $color-white;
            border-radius: 50px;
            transition: left .25s ease-in-out;

            @include mX(768px, 1024px){
                width: 27px;
            }
        }

        .texts {
            position: absolute;
            top: 5px;
            z-index: 2;
            width: 100%;
            color: $color-white;
            text-transform: uppercase;
            font-size: 14px;

            @include mX(768px, 1024px){
                top: 8px;
                font-size: 12px;
            }

            &:before {
                content: "Active";
                position: absolute;
                left: 18px;
            }

            &:after {
                content: "Inactive";
                position: absolute;
                right: 12px;
                color: $color-black;
            }
        }

        .bg {
            display: block;
            background: #dbdbdb;
            position: absolute;
            z-index: 0;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 50px;
            transition: background .25s ease-in;
        }

         input[type="checkbox"] {
            opacity: 0;
            cursor: pointer;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 10;
            width: 119px;
            height: 31px;

            @include mX(768px, 1024px){
                width: 100px;
            }

            &:checked {
                & ~ .btn {
                    left: 76px;
                    @include mX(768px, 1024px){
                        left: 63px;
                    }
                }
                & ~ .bg {
                    background: $btn-light-green;
                }
                & ~ .texts {
                    &:after {
                        content: '';
                    }
                }
            } 

            &:not(:checked) {
               & ~ .texts{
                    &:before {
                        content: "";
                    }
                }
            } 
        }
    }
}


/* Sweep To Bottom */
@mixin hvr-sweep-to-bottom {
    display: inline-block;
    vertical-align: middle;
    -webkit-transform: perspective(1px) translateZ(0);
    transform: perspective(1px) translateZ(0);
    position: relative;
    -webkit-transition-property: color;
    transition-property: color;
    -webkit-transition-duration: 0.3s;
    transition-duration: 0.3s;
    overflow: hidden;

    &:before {
        content: "";
        position: absolute;
        z-index: -1;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: $btn-light-green;
        -webkit-transform: scaleY(0);
        transform: scaleY(0);
        -webkit-transform-origin: 50% 0;
        transform-origin: 50% 0;
        -webkit-transition-property: transform;
        transition-property: transform;
        -webkit-transition-duration: 0.3s;
        transition-duration: 0.3s;
        -webkit-transition-timing-function: ease-out;
        transition-timing-function: ease-out;
    }

    &:hover, 
    &:focus, 
    &:active {
        color: white;
    }
    
    &:hover:before, 
    &:focus:before, 
    &:active:before {
        -webkit-transform: scaleY(1);
        transform: scaleY(1);
    }
}


/* Sweep To Right */
@mixin hvr-sweep-to-right {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  overflow: hidden;

    &:before {
        content: "";
        position: absolute;
        z-index: -1;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: $btn-light-blue;
        -webkit-transform: scaleX(0);
        transform: scaleX(0);
        -webkit-transform-origin: 0 50%;
        transform-origin: 0 50%;
        -webkit-transition-property: transform;
        transition-property: transform;
        -webkit-transition-duration: 0.3s;
        transition-duration: 0.3s;
        -webkit-transition-timing-function: ease-out;
        transition-timing-function: ease-out;
    }
    &:hover, 
    &:focus, 
    &:active {
        color: white;
    }
    
    &:hover:before, 
    &:focus:before, 
    &:active:before {
        -webkit-transform: scaleX(1);
        transform: scaleX(1);
    }
}


//media query loop
@mixin mX($arg...){
	@if length($arg) == 1{
		@media screen and (max-width:nth($arg, 1)){
			@content;
		}
	}
	@if length($arg) == 2{
		@media screen and (min-width:nth($arg, 1)) and (max-width:nth($arg, 2)){
			@content;
		}
	} 
}

@mixin mI($arg...){
	@if length($arg) == 1{
		@media screen and (min-width:nth($arg, 1)){
			@content;
		}
	}
}

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
		-moz-border-radius: $radius;
		-ms-border-radius: $radius;
			border-radius: $radius;
}
@mixin border-top-right-radius($radius) {
	-webkit-border-top-right-radius: $radius;
		-moz-border-top-right-radius: $radius;
		-ms-border-top-right-radius: $radius;
			border-top-right-radius: $radius;
}
@mixin border-top-left-radius($radius) {
	-webkit-border-top-left-radius: $radius;
		-moz-border-top-left-radius: $radius;
		-ms-border-top-left-radius: $radius;
			border-top-left-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
		-moz-border-bottom-right-radius: $radius;
		-ms-border-bottom-right-radius: $radius;
			border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
	-webkit-border-bottom-left-radius: $radius;
		-moz-border-bottom-left-radius: $radius;
		-ms-border-bottom-left-radius: $radius;
			border-bottom-left-radius: $radius;
}